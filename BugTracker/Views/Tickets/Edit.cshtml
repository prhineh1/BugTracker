@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}



<section id="main-content">
    <section class="wrapper site-min-height">
        <h3><i class="fa fa-angle-right"></i> Edit <i>@Model.Title</i></h3>
        <div class="row mt">
            <div class="col-lg-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-4">
                                <h4>
                                    @Html.ActionLink("Back to List", "Index")
                                </h4>
                            </div>
                            <div class="col-md-4">
                                @if (TempData["title"] == "duplicated")
                                {
                                    <h4 style="color:red;">This title is already taken; choose another.</h4>
                                }
                            </div>
                        </div>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.Created)
                        @Html.HiddenFor(model => model.OwnerUserId)
                        @Html.HiddenFor(model => model.ProjectId)

                        @if (!(User.IsInRole("Admin") || User.IsInRole("Super User") || User.IsInRole("Project Manager")))
                        {
                            @Html.HiddenFor(Model => Model.AssignedToUserId)
                            @Html.HiddenFor(Model => Model.TicketStatusId)
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-5">
                                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @style = "margin: 0px; width: 100%; max-width:100%; height: 144px; box-sizing:border-box;" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (User.IsInRole("Admin") || User.IsInRole("Super User") || User.IsInRole("Project Manager"))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        @if (User.IsInRole("Admin") || User.IsInRole("Super User") || User.IsInRole("Project Manager"))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "Assign To User", htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-md-offset-1 col-md-10">
                                <input type="submit" value="Save" class="btn btn-theme02" />
                            </div>
                        </div>
                    </div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }

            </div>
        </div>
    </section><! --/wrapper -->
</section><!-- /MAIN CONTENT -->



    